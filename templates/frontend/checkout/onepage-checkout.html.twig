{# Kế thừa layout frontend #}
{% extends "frontend/layouts/layout.html.twig" %}

{# Nội dung trong block title #}
{% block title %}
Thanh toán
{% endblock %}
{# End Nội dung trong block title #}

{# Nội dung trong block headline #}
{% block headline %}
Thanh toán
{% endblock %}
{# End Nội dung trong block headline #}

{% block customstyles %}
<style>

</style>
{% endblock %}

{# Nội dung trong block content #}
{% block content %}
<div class="container mt-4">
    <form class="needs-validation" id="frmCheckOut" name="frmCheckOut" method="post" action="/frontend/checkout/onepage-checkout.php">
        <input type="hidden" name="customer_email" value="{{ customer.email }}" />

        <div class="py-5 text-center">
            <i class="fa fa-credit-card fa-4x" aria-hidden="true"></i>
            <h2>Thanh toán</h2>
            <p class="lead">Vui lòng kiểm tra thông tin Khách hàng, thông tin Giỏ hàng trước khi Đặt hàng.</p>
        </div>

        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Giỏ hàng</span>
                    <span class="badge badge-secondary badge-pill">{{ cartdata|length }}</span>
                </h4>
                <ul class="list-group mb-3">
                    {% set subtotal = 0 %}
                    {% for product in cartdata %}
                    <input type="hidden" name="sanphamgiohang[{{ loop.index }}][id]" value="{{ product.id }}" />
                    <input type="hidden" name="sanphamgiohang[{{ loop.index }}][list_price_after_discount]" value="{{ product.list_price_after_discount }}" />
                    <input type="hidden" name="sanphamgiohang[{{ loop.index }}][quantity]" value="{{ product.quantity }}" />
                    <input type="hidden" name="sanphamgiohang[{{ loop.index }}][product_name]" value="{{ product.product_name }}" />

                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">{{ product.product_name }}</h6>
                            <small class="text-muted">{{ product.list_price_after_discount|number_format(0, '.', ',') }} x
                                {{ product.quantity|number_format(0, '.', ',') }}</small>
                        </div>
                        {% set subtotal = subtotal + product.amount %}
                        <span class="text-muted">{{ product.amount|number_format(0, '.', ',') }}</span>
                    </li>
                    {% endfor %}
                    <li class="list-group-item d-flex justify-content-between">
                        <span>Tổng thành tiền</span>
                        <strong>{{ subtotal|number_format(0, '.', ',') }}</strong>
                    </li>
                </ul>

                <!-- Thông tin Mã khuyến mãi Voucher / Coupon -->
                <div class="card p-2">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Mã khuyến mãi">
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary">Xác nhận</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 order-md-1">
                
                    <h4 class="mb-3">Thông tin khách hàng</h4>

                    <div class="row">
                        <div class="col-md-12">
                            <label for="full_name">Họ tên</label>
                            <input type="text" class="form-control" name="full_name" id="full_name"
                                value="{{ customer.last_name }}&nbsp;{{ customer.first_name }}" readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="gender">Giới tính</label>
                            <input type="text" class="form-control" name="gender" id="gender"
                                value="{{ customer.gender == 0 ? 'Nam' : 'Nữ' }}" readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="billing_address">Địa chỉ Thanh toán</label>
                            <input type="text" class="form-control" name="billing_address" id="billing_address"
                                value="{{ customer.billing_address }}" readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="shipping_address">Địa chỉ Giao hàng</label>
                            <input type="text" class="form-control" name="shipping_address" id="shipping_address"
                                value="{{ customer.shipping_address }}" readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="phone">Điện thoại</label>
                            <input type="text" class="form-control" name="phone" id="phone" value="{{ customer.phone }}"
                                readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="email">Email</label>
                            <input type="text" class="form-control" name="email" id="email" value="{{ customer.email }}"
                                readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="birthday">Ngày sinh</label>
                            <input type="text" class="form-control" name="birthday" id="birthday"
                                value="{{ customer.birthday }}" readonly>
                        </div>
                        <div class="col-md-12">
                            <label for="code">CMND</label>
                            <input type="text" class="form-control" name="code" id="code" value="{{ customer.code }}"
                                readonly>
                        </div>
                    </div>

                    <h4 class="mb-3">Hình thức thanh toán</h4>

                    <div class="d-block my-3">
                        {% for payment in payment_types %}
                        <div class="custom-control custom-radio">
                            <input id="httt-{{ payment.id }}" name="payment_type_id" type="radio" class="custom-control-input"
                                required="" value="{{ payment.id }}">
                            <label class="custom-control-label"
                                for="httt-{{ payment.id }}">{{ payment.payment_name }}</label>
                        </div>
                        {% endfor %}
                    </div>
                    <hr class="mb-4">
                    <button class="btn btn-primary btn-lg btn-block" type="submit" name="btnDatHang">Đặt hàng</button>

                    <!-- Bổ sung nút Thanh toán với Stripe -->
                    <button id="checkout-button" type="button" class="btn btn-success">Thanh toán với Stripe</button>
            </div>
        </div>
    </form>
</div>
{% endblock %}
{# End Nội dung trong block content #}

{% block customscripts %}
<!-- Tích hợp thư viện JS Thanh toán Stripe -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://js.stripe.com/v3/"></script>
<script type="text/javascript">
    function serialize (data) {
        let obj = {};
        for (let [key, value] of data) {
            if (obj[key] !== undefined) {
                if (!Array.isArray(obj[key])) {
                    obj[key] = [obj[key]];
                }
                obj[key].push(value);
            } else {
                obj[key] = value;
            }
        }
        return obj;
    }

    // Chuẩn bị dữ liệu Giỏ hàng để gởi đến cổng thanh toán Stripe
//     [
//     'payment_method_types' => ['card'],
//     'line_items' => [
        // [
//       'price_data' => [
//         'currency' => 'vnd',
//         'product_data' => [
//           'name' => 'T-shirt',
//         ],
//         'unit_amount' => $tongTienCanPhaiThanhToan,
//       ],
//       'quantity' => 1,
//     ]],
//     'mode' => 'payment',
//     'success_url' => 'https://example.com/success',
//     'cancel_url' => 'https://example.com/cancel',
//   ]
    // var sendData = {
    //     payment_method_types: ['card'],
    //     line_items: [
    //         {
    //             price_data: {

    //             }
    //         }
    //     ]
    // }

    // Get the form
    let form = document.querySelector('#frmCheckOut');

    // Get all field data from the form
    let data = new FormData(form);

    // Convert to an object
    let sendData = serialize(data);

    // var sendData = JSON.stringify($("#frmCheckOut").serialize()); // post data || get data

    // Create an instance of the Stripe object with your publishable API key
    var stripe = Stripe('pk_test_51IgWCYG9O8Lzt9jNYWrungybX1ypQceExeBM5nEiCFRydpupgWAzKe51QpNLpMtnj7YhwhojzYWIkrWFV92LWrP200DOgLmMNV');
    var checkoutButton = document.getElementById('checkout-button');

    checkoutButton.addEventListener('click', function() {
      // Create a new Checkout Session using the server-side endpoint you
      // created in step 3.
    //   fetch('/frontend/ajax/create-checkout-session', {
    //     method: 'POST',
    //     dataType: 'json', // data type
    //     data: sendData
    //   })
    //   .then(function(response) {
    //       debugger;
    //     return response.json();
    //   })

            $.ajax({
                url: '/frontend/ajax/create-checkout-session',
                method: "POST",
                dataType: 'json',
                data: sendData,
                success: function (session) {
                    debugger;
                    return stripe.redirectToCheckout({ sessionId: session.id });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus, errorThrown);
                    // Hiện thông báo
                    alert(errorThrown);
                }
            });


        // axios.post('/frontend/ajax/create-checkout-session', sendData)
        // .then(function (response) {
        //     console.log(response);
        //     // return stripe.redirectToCheckout({ sessionId: session.id });
        // })
        // .catch(function (error) {
        //     console.log(error);
        // })


    //   .then(function(session) {
    //       debugger;
    //     return stripe.redirectToCheckout({ sessionId: session.id });
    //   })
    //   .then(function(result) {
    //     // If `redirectToCheckout` fails due to a browser or network
    //     // error, you should display the localized error message to your
    //     // customer using `error.message`.
    //     if (result.error) {
    //       alert(result.error.message);
    //     }
    //   })
    //   .catch(function(error) {
    //     console.error('Error:', error);
    //   });
    });
</script>

<script>
    $(document).ready(function () {
        
    });
</script>
{% endblock %}